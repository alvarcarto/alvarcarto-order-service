version: 2
jobs:
  build:
    # https://circleci.com/docs/2.0/configuration-reference/#available-machine-images
    # On 25th Sep 2019, docs state that the ubuntu comes with docker and docker compose tools
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/project
    steps:
      - checkout

      # Postgres database is setup with docker-compose
      - run:
          name: Install docker-compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m) > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Install nvm and node@12
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 12
            nvm alias default 12

            # Each "run" step uses the same `$BASH_ENV`, so need to modify it
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

            echo -e "\nBASH_ENV=$BASH_ENV"
            echo -e "HOME=$HOME"

            echo -e "\n$BASH_ENV file contents:"
            cat $BASH_ENV

      - run:
          name: Tests and lint
          command: |
            docker-compose up -d
            node -v
            npm -v
            npm ci
            npm test
            npm run lint
            docker-compose logs
